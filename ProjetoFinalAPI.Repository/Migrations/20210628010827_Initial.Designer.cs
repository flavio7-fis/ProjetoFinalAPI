// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFinalAPI.Repository.Context;

namespace ProjetoFinalAPI.Repository.Migrations
{
    [DbContext(typeof(SqlServerContext))]
    [Migration("20210628010827_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoFinalAPI.Domain.Entities.Profissional", b =>
                {
                    b.Property<Guid>("IdProfissional")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDPROFISSIONAL")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnName("TELEFONE")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("IdProfissional");

                    b.HasIndex("Cpf")
                        .IsUnique();

                    b.ToTable("PROFISSIONAL");
                });

            modelBuilder.Entity("ProjetoFinalAPI.Domain.Entities.Servico", b =>
                {
                    b.Property<Guid>("IdServico")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IDSERVICO")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("DESCRICAO")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<Guid>("IdProfissional")
                        .HasColumnName("IDPROFISSIONAL")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("NOME")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<double>("Valor")
                        .HasColumnName("VALOR")
                        .HasColumnType("float")
                        .HasMaxLength(150);

                    b.HasKey("IdServico");

                    b.HasIndex("IdProfissional");

                    b.ToTable("SERVICO");
                });

            modelBuilder.Entity("ProjetoFinalAPI.Domain.Entities.Servico", b =>
                {
                    b.HasOne("ProjetoFinalAPI.Domain.Entities.Profissional", "Profissional")
                        .WithMany("Servicos")
                        .HasForeignKey("IdProfissional")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
